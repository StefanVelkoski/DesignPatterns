SOLID - In object-oriented  programming, SOLID is a  acronym for five design principles intended to make software designs more understandable, flexible, and maintainable.

1. Single Responsobility Principle

	-A class should have only one responsibility.

2.Open/Closed Principle
	
	-A class should be open for extension but closed for modification.
	

3. Liskov Substitution Principle

	-Parent classes should be easily substitutioned with children classes without blowing	
	up the application.

4. Interface Segregation Principle

	-Classes should not depend on interfaces and functionalities they don't use.

5. Dependency Inversion Principle

	-Abstractions should not depend on details, details should depend on abstractions

